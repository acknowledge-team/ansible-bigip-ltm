---

- name: Ensure defined pools has been created with tcp or udp monitor
  bigip_pool:
    state: present
    name: "{{ pool_prefix }}{{ env }}_{{ application }}_{{ pool.id }}"
    lb_method: "{{ pool.lb_method | default('round-robin') }}"
    monitors: "/Common/m_{{ monitor }}-any"
    provider:
      password: "{{ bigip_passwd }}"
      server: "{{ bigip_hostname }}"
      user: "{{ bigip_user }}"
      validate_certs: "{{ bigip_validate_certs }}"
  delegate_to: localhost
  when: (monitor == "udp" or monitor == "tcp") and (create_pool | bool)

- name: Ensure defined pools has been created with http monitor
  bigip_pool:
    state: present
    name: "{{ pool_prefix }}{{ env }}_{{ application }}_{{ pool.id }}"
    lb_method: "{{ pool.lb_method | default('round-robin') }}"
    monitors: "{{ monitor_prefix }}{{ monitor }}_{{ env }}_{{ application }}"
    provider:
      password: "{{ bigip_passwd }}"
      server: "{{ bigip_hostname }}"
      user: "{{ bigip_user }}"
      validate_certs: "{{ bigip_validate_certs }}"
  delegate_to: localhost
  when: monitor == "http" and (create_pool | bool)

- name: Ensure the pools members has been added
  bigip_pool_member:
    state: present
    name: "{{ node_prefix }}{{ item.name }}"
    #address: "{{ item.ip }}%{{ rd }}"
    address: "{{ item.ip }}"
    pool: "{{ pool_prefix }}{{ env }}_{{ application }}_{{ pool.id }}"
    port: "{{ item.port }}"
    reuse_nodes: true
    fqdn_auto_populate: false
    provider:
      password: "{{ bigip_passwd }}"
      server: "{{ bigip_hostname }}"
      user: "{{ bigip_user }}"
      validate_certs: "{{ bigip_validate_certs }}"
  delegate_to: localhost
  loop: "{{ pool.members }}"
  when: create_pool | bool
